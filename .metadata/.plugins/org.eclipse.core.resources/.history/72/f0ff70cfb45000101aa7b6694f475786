package summerpep2.Threads;

class SharedData {
    int value = 0;

    public void addOne() {
        value += 1;
        System.out.println(Thread.currentThread().getName() + " added 1, value: " + value);
    }

    public void subtractOne() {
        value -= 1;
        System.out.println(Thread.currentThread().getName() + " subtracted 1, value: " + value);
    }
}

public class ThreadsExample {
    public static void main(String[] args) {
        SharedData data = new SharedData();

        Thread adder = new Thread(() -> {
            for (int i = 0; i < 10; i++) {
                data.addOne();
                try {
                    Thread.sleep(50); // optional delay to simulate real-time
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }, "AdderThread");

        Thread subtractor = new Thread(() -> {
            for (int i = 0; i < 10; i++) {
                data.subtractOne();
            }
        }, "SubtractorThread");

        adder.start();
        subtractor.start();
        System.out.println("Final value: " + data.value);
    }
}
